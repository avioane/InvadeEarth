/*
 * BonusCardDisplay.java
 *
 * Created on July 28, 2005, 3:58 PM
 */

package org.invade.classic;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.AffineTransform;
import javax.swing.JPanel;
import org.invade.MapCanvas;
import org.invade.WindowCenteringUtility;


/**
 *
 * @author  jcrosm
 */
public class BonusCardDisplay extends javax.swing.JDialog {
    
    private static int MARGIN = 16;
    
    public BonusCardDisplay(java.awt.Frame parent, BonusCard card,
            final MapCanvas mapCanvas) {
        super(parent);
        
        initComponents();
        
        if( card.isWild() ) {
            typeLabel.setText(BonusCard.WILD_NAME);
            territoryLabel.setVisible(false);
            territoryDisplayPanel.setVisible(false);
        } else {
            typeLabel.setText(card.getType().toString());
            territoryLabel.setText(card.getTerritory().getName());
            final Polygon shape = card.getTerritory().getShape();
            Color continentColor = null;
            if( card.getTerritory().getContinent() != null ) {
                continentColor = card.getTerritory().getContinent().getColor();
            }
            final Color color = continentColor == null ? Color.GRAY
                    : card.getTerritory().getContinent().getColor();
            
            final Image image = mapCanvas.getBackgroundImage();
            
            territoryDisplayPanel.add(new JPanel(){
                public void paintComponent(Graphics g) {
                    super.paintComponent(g);
                    
                    Graphics2D page = (Graphics2D)g;
                    Rectangle bounds = shape.getBounds();
                    bounds.x -= MARGIN;
                    bounds.y -= MARGIN;
                    bounds.width += MARGIN * 2;
                    bounds.height += MARGIN * 2;
                    AffineTransform old = page.getTransform();
                    double zoomFactor = 1.0;
                    double zoomHorizontal = (double)getWidth() / (double)bounds.width;
                    double zoomVertical = (double)getHeight() / (double)bounds.height;
                    if( zoomHorizontal < zoomVertical ) {
                        zoomFactor = zoomHorizontal;
                        bounds.y -= ((getHeight() - (bounds.height * zoomFactor )) / 2);
                        bounds.height = bounds.width;
                    } else {
                        zoomFactor = zoomVertical;
                        bounds.x -= ((getWidth() - (bounds.width * zoomFactor )) / 2);
                        bounds.width = bounds.height;
                    }
                    
                    if( image != null ) {
                        g.drawImage(image, 0, 0, getWidth(), getHeight(),
                                bounds.x, bounds.y,
                                bounds.x + bounds.width,
                                bounds.y + bounds.height,
                                null);
                    } else {
                        page.transform(AffineTransform.getScaleInstance(zoomFactor, zoomFactor));
                        page.transform(AffineTransform.getTranslateInstance(-bounds.x, -bounds.y));
                        
                        page.setColor(color);
                        page.fillPolygon(shape);
                        page.setTransform(old);
                    }
                }
            });
        }
        
        setTitle(card.getName(true, false));
        
        pack();
        WindowCenteringUtility.center(this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        typeLabel = new javax.swing.JLabel();
        territoryLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        territoryDisplayPanel = new javax.swing.JPanel();

        getContentPane().setLayout(new java.awt.FlowLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Card");
        setModal(true);
        setResizable(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(240, 320));
        typeLabel.setFont(new java.awt.Font("SansSerif", 1, 14));
        typeLabel.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(16, 16, 16, 16);
        jPanel1.add(typeLabel, gridBagConstraints);

        territoryLabel.setFont(new java.awt.Font("SansSerif", 0, 12));
        territoryLabel.setText("Power up");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(16, 16, 16, 16);
        jPanel1.add(territoryLabel, gridBagConstraints);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel1.add(closeButton, gridBagConstraints);

        territoryDisplayPanel.setLayout(new java.awt.BorderLayout());

        territoryDisplayPanel.setBorder(new javax.swing.border.EtchedBorder());
        territoryDisplayPanel.setMaximumSize(new java.awt.Dimension(200, 200));
        territoryDisplayPanel.setMinimumSize(new java.awt.Dimension(200, 200));
        territoryDisplayPanel.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(territoryDisplayPanel, gridBagConstraints);

        getContentPane().add(jPanel1);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel territoryDisplayPanel;
    private javax.swing.JLabel territoryLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
    
}
