/*
 * ContinentsDialog.java
 *
 * Created on June 28, 2005, 3:01 PM
 */

package org.invade;

import java.awt.Color;
import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  jcrosm
 */
public class ContinentsDialog extends javax.swing.JDialog {
    
    private Board board;
    
    /**
     * Creates new form ContinentsDialog 
     */
    public ContinentsDialog(java.awt.Frame parent, boolean modal, Board board) {
        super(parent);
        initComponents();
        this.board = board;
        populateList();
        WindowCenteringUtility.center(this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane = new javax.swing.JScrollPane();
        continentsList = new javax.swing.JList();
        mainButtonsPanel = new javax.swing.JPanel();
        newButton = new javax.swing.JButton();
        renameButton = new javax.swing.JButton();
        setBonusButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        setColorButton = new javax.swing.JButton();
        clearColorButton = new javax.swing.JButton();
        exitButtonsPanel = new javax.swing.JPanel();
        closeButton = new javax.swing.JButton();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Continents");
        setModal(true);
        jScrollPane.setPreferredSize(new java.awt.Dimension(260, 320));
        jScrollPane.setViewportView(continentsList);

        getContentPane().add(jScrollPane);

        newButton.setText("New...");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        mainButtonsPanel.add(newButton);

        renameButton.setText("Rename...");
        renameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameButtonActionPerformed(evt);
            }
        });

        mainButtonsPanel.add(renameButton);

        setBonusButton.setText("Set Bonus...");
        setBonusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBonusButtonActionPerformed(evt);
            }
        });

        mainButtonsPanel.add(setBonusButton);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        mainButtonsPanel.add(deleteButton);

        setColorButton.setText("Set Color...");
        setColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setColorButtonActionPerformed(evt);
            }
        });

        mainButtonsPanel.add(setColorButton);

        clearColorButton.setText("No Color");
        clearColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearColorButtonActionPerformed(evt);
            }
        });

        mainButtonsPanel.add(clearColorButton);

        getContentPane().add(mainButtonsPanel);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        exitButtonsPanel.add(closeButton);

        getContentPane().add(exitButtonsPanel);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void setColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setColorButtonActionPerformed
        Continent continent = (Continent)continentsList.getSelectedValue();
        Color initial = continent.getColor();
        continent.setColor( JColorChooser.showDialog(this, "Continent Color", 
                (initial == null) ? Color.GRAY : initial ) );
    }//GEN-LAST:event_setColorButtonActionPerformed

    private void clearColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearColorButtonActionPerformed
    ((Continent)continentsList.getSelectedValue()).setColor(null);
    }//GEN-LAST:event_clearColorButtonActionPerformed
    
    private void setBonusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setBonusButtonActionPerformed
        showSetBonus((Continent)continentsList.getSelectedValue());
        populateList();
    }//GEN-LAST:event_setBonusButtonActionPerformed
    
    private void renameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameButtonActionPerformed
        showRename((Continent)continentsList.getSelectedValue());
        populateList();
    }//GEN-LAST:event_renameButtonActionPerformed
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        board.removeContinent((Continent)continentsList.getSelectedValue());
        populateList();
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        Continent continent = new Continent();
        showRename(continent);
        if( !continent.getName().equals("") ) {
            board.getContinents().add(continent);
            showSetBonus(continent);
            populateList();
        }
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
    
    public void populateList() {
        DefaultListModel model = new DefaultListModel();
        for( Continent continent : board.getContinents() ) {
            model.addElement(continent);
        }
        continentsList.setModel(model);
    }
    
    public void showRename(Continent continent) {
        if( continent != null ) {
            String result = JOptionPane.showInputDialog(this, "New name", "Rename", JOptionPane.QUESTION_MESSAGE);
            if( result != null && !result.equals("") ) {
                continent.setName(result);
            }
        }
    }
    
    public void showSetBonus(Continent continent) {
        if( continent != null ) {
            String result = JOptionPane.showInputDialog(this, "Bonus value", "Set Bonus", JOptionPane.QUESTION_MESSAGE);
            if( result != null ) {
                try {
                    continent.setBonus(Integer.parseInt(result));
                } catch(NumberFormatException e) {}
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearColorButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JList continentsList;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel exitButtonsPanel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JPanel mainButtonsPanel;
    private javax.swing.JButton newButton;
    private javax.swing.JButton renameButton;
    private javax.swing.JButton setBonusButton;
    private javax.swing.JButton setColorButton;
    // End of variables declaration//GEN-END:variables
    
}
