/*
 * ActiveCardDisplay.java
 *
 * Created on July 29, 2005, 8:59 AM
 */

package org.invade;

import java.awt.Frame;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author  jcrosm
 */
public class ActiveCardDisplay extends javax.swing.JDialog {
    
    private List<Card> activeCards;
    private Frame parent;
    private Board board;
    private MapCanvas mapCanvas;
    
    /** Creates new form ActiveCardDisplay */
    public ActiveCardDisplay(java.awt.Frame parent, Board board, MapCanvas mapCanvas) {
        super(parent);
        this.parent = parent;
        this.board = board;
        this.mapCanvas = mapCanvas;
        initComponents();
        
        activeCards = new ArrayList<Card>(board.getCardsInPlay());        
        Player current = board.getCurrentPlayer();
        DefaultListModel model = new DefaultListModel();
        
        for( Card card : activeCards ) {
            model.addElement(card.getName(current != card.getPlayer(), true));
        }
        activeCardList.setModel(model);
        updateViewButton();
        
        WindowCenteringUtility.center(this);
    }
    
    public void updateViewButton() {
        int index = activeCardList.getSelectedIndex();
        viewButton.setEnabled(index != -1
                && activeCards.get(index).canDisplayWhenActive(board));
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        activeCardList = new javax.swing.JList();
        closeButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Active Cards");
        setModal(true);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(196, 220));
        activeCardList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                activeCardListValueChanged(evt);
            }
        });

        jScrollPane1.setViewportView(activeCardList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(closeButton, gridBagConstraints);

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(viewButton, gridBagConstraints);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        int index = activeCardList.getSelectedIndex();
        if(index != -1) {
            activeCards.get(index).displayCard(parent, mapCanvas);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void activeCardListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_activeCardListValueChanged
        updateViewButton();
    }//GEN-LAST:event_activeCardListValueChanged

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList activeCardList;
    private javax.swing.JButton closeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
    
}
